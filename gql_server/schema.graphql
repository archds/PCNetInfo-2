type Query {
    hello: String!
    PC(name: String): PC
    AllPC: [PC!]!
    filters: [Filter!]!
    getView(view: ViewControllerInput!): [PC]!
}


input ViewControllerInput {
    sort: String!
    filter: FilterInput!
    search: SearchInput
}

input SearchInput {
    searchType: SearchField
    searchValue: String!
}

input FilterInput {
    serialNumber: SerialNumberFilter!
}

enum SerialNumberFilter {
    ANY
    SPECIFIED
    NOT_SPECIFIED
}

enum SearchField {
    label
    serial_number
    comment
    user
    pc_name
    cpu_name
    videocard
}

type Subscription {
    PC: PC!
}

type Mutation {
    updateField(field: String, value: String, pcName: String): Boolean!
    updateLabel(value: String, pcName: String): Boolean!
}

type PC {
    type: String
    name: String!
    domain: String
    username: String
    timezone: String
    ip: String
    comment: String
    label: String
    form_factor: String
    os: OS
    cpu: CPU
    ram: RAM
    motherboard: Motherboard
    videocard: Videocard
}

# Software types definition
type OS {
    name: String
    version: String
    architecture: String
}

# Hardware types definition
type CPU {
    name: String
    clock: String
    cores: String
    threads: String
    socket: String
}

type RAM {
    size: Int
    banks: [String]
}

type Motherboard {
    manufacturer: String
    product: String
    serial: String
}

type Videocard {
    name: String
    resX: String
    resY: String
}

type Filter {
    name: String,
    id: String,
    options: [String!]!,
}